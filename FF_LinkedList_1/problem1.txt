How are linked lists arranged in memory?

First of all, Linked lists store data of some sort. Whether this is a specific person's ID or grades or people in a line.
Next, you have a pointer that points to the next node or to nullptr.

Arrays and Linked lists are similar in that they store data, but linkedlists are NOT stored in blocks next to eachother.
They are completely scattered across memory, only held together by the pointers. This means you could easily cut a node out of the line by simply pointing its pointer to another node.

---------------
What are some advantages/disadvantages of Linked List?

Advantages:
-
dynamic. If you start out with an array of size 2 and only reserve memory for that, 
youll have to add or decrease memory to be most efficient, which requires planning and supervision. Linked Lists only store the data they need.

Its also more efficient to insert or delete data. if we look at an array of size 5 and have to insert something, we have to shift the whole array.
[1,2,4,5,6]
[1,2,null,4,5,6]
And finally we can shift our variable in.
[1,2,3,4,5,6]

This is the same for deletions
[1,2,3,4,4,5,6]
[1,2,3,4,5, 6, 6]
[1,2,3,4,5,6]

Disadvantages:
-
You use slightly more memory as you have to store data of the pointers.

It is slower to sort and access, and you cannot choose a value like value = array[5]. You would first have to traverse n amount of nodes to reach the node you want.
This also means specific sorts like binary sort do not work on LL.

Its also more complex than an array.
---------------
How are Linked Lists implemented (structure)?

The way we implemented in class was this:

#include <iostream>
using namespace std;

struct st {      - This defines a singular node. It stores a gpa and id value and a pointer to the next node.
  int id;
  float gpa: 
  st *next;
};
int main () {
  st *head;   - This loop goes through the linked list, filling in random values. At the end we set the new pointer value pointing to the next node within the list.
  for(int i=0;i<100;i++){
    p= new st;
    if(i==0) head=p;
    p->id=rand()%100;
    p->gpa=1+rand()%4;
    p->next=nullptr;

    p=p->next; -move p to next value
  }
  p=head; 
}

--------------
Explain some common Linked List Functions?** Only explain if not required for the question

I believe insertion at the beginning and end are common. 
Deleting a node (rearranging the pointers to ignore it basically and deleting the memory so as to not creating a memory leak)
Searching for a specific element, like if we are searching for a student with a 4.0 GPA

I have also heard of people reversing linked lists in like job interviews so maybe that.

